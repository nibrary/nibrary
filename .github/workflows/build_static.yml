name: Static build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
            additional_packages: libomp-dev
          - os: macos-latest
            c_compiler: clang-omp
            cpp_compiler: clang-omp++
            additional_packages: llvm

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies (Ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: sudo apt-get update && sudo apt-get install -y ${{ matrix.additional_packages }}

    - name: Install dependencies (macOS)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install ${{ matrix.additional_packages }}
        echo 'export PATH="/opt/homebrew/opt/llvm/bin:$PATH"' >> /Users/runner/.bash_profile
        export LDFLAGS="-L/opt/homebrew/opt/llvm/lib"
        export CPPFLAGS="-I/opt/homebrew/opt/llvm/include"

    - name: Set up build directory
      shell: bash
      run: echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_ENV"

    - name: Configure CMake
      run: |
        cmake -B ${{ env.build-output-dir }} -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }} -DCMAKE_C_COMPILER=${{ matrix.c_compiler }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_SHARED_LIBS=OFF -DDEFINE_CUDA=OFF ${{ matrix.os == 'macos-latest' && '-DCMAKE_C_COMPILER=/opt/homebrew/opt/llvm/bin/clang -DCMAKE_CXX_COMPILER=/opt/homebrew/opt/llvm/bin/clang++' || '' }} -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ env.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ env.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
